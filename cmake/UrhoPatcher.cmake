# TODO: add patch for generating header Urho3D.h
# some older version use a custom function replaced by the cmake version's one that needs to be execute after the target is defined (after setup_library)
# the patch should detect if generate_export_header is used before setup_library
# and then remove generate_export_header and replace setup_library by this block

    set (patch_generate_header_after_target_defined [[
# Generate platform specific export header file (can only be called after the target has been added)
if (MSVC)
    set (APPENDIX "\n#pragma warning(disable: 4251)\n#pragma warning(disable: 4275)\n\n#if _MSC_VER < 1900\n#define strtoll _strtoi64\n#define strtoull _strtoui64\n#endif\n")
endif ()
if (URHO3D_CLANG_TOOLS)
    set (ANNOTATE_NONSCRIPTABLE "__attribute__((annotate(\"nonscriptable\")))")
endif ()
set (APPENDIX "${APPENDIX}\n#define NONSCRIPTABLE ${ANNOTATE_NONSCRIPTABLE}\n\n")
foreach (DEFINE URHO3D_STATIC_DEFINE URHO3D_OPENGL URHO3D_D3D11 URHO3D_SSE URHO3D_DATABASE_ODBC URHO3D_DATABASE_SQLITE URHO3D_LUAJIT URHO3D_TESTING CLANG_PRE_STANDARD)
    if (${DEFINE})
        set (APPENDIX "${APPENDIX}#ifndef ${DEFINE}\n#define ${DEFINE}\n#endif\n")
    endif ()    
endforeach()
if (URHO3D_FORCE_AS_MAX_PORTABILITY)
    set (APPENDIX "${APPENDIX}#define AS_MAX_PORTABILITY\n")
endif ()
generate_export_header (${TARGET_NAME} EXPORT_MACRO_NAME URHO3D_API EXPORT_FILE_NAME Urho3D.h.new CUSTOM_CONTENT_FROM_VARIABLE APPENDIX)
file (READ Precompiled.h COPYRIGHT LIMIT 1128)
file (READ ${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h.new EXPORT_HEADER)
file (WRITE ${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h.new ${COPYRIGHT}${EXPORT_HEADER})
execute_process (COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h.new ${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h)
file (REMOVE ${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h.new)
source_group (\"Source Files\\\\Generated" FILES \${CMAKE_CURRENT_BINARY_DIR}/Urho3D.h)
# Precompile the header after the export header file has been generated
enable_pch (Precompiled.h)
]])

# patch CMakeLists.txt in a urho3D source directory
function (urho_apply_cmakefile_patch dir)
    if (PATCHER_SHOW)
        message ("-----------------------------------------------------------------------")
        message (" .. ${dir}/CMakeLists.txt ... analyze ...")
    endif ()
    set (num_patches 0)
    if (EXISTS "${dir}/CMakeLists.txt")
        # filter with ENCODING UTF-8 to remove
        file (STRINGS "${dir}/CMakeLists.txt" cmakefile ENCODING UTF-8)
        set (new_content "")
        set (IsFileChanged FALSE)
        set (line_counter 0)
        set (prevline "")
        foreach (line ${cmakefile})
            math (EXPR line_counter "${line_counter} + 1")
            set (IsLineChanged FALSE)
            set (newline ${line})
            if (NOT newline MATCHES "^#")
                if (newline MATCHES "^set \\(CMAKE_MODULE_PATH" AND dir STREQUAL "${URHO3D_SOURCE_DIR}/..")
                    set (patch "set (IS_URHO3D TRUE)\nif (NOT URHO3D_CMAKE_MODULE)\n\tlist (APPEND CMAKE_MODULE_PATH \${CMAKE_SOURCE_DIR}/cmake/Modules)\nendif()")
                    set (newline "${patch}\n")
                    set (IsLineChanged TRUE)
                elseif (newline MATCHES [[set \(CMAKE_MODULE_PATH \${BAKED_CMAKE_SOURCE_DIR}/cmake/Modules]])
                    string (REPLACE "{BAKED_CMAKE_SOURCE_DIR}/cmake/Modules" "{URHO3D_CMAKE_MODULE}" newline ${newline})
                    set (IsLineChanged TRUE)
                elseif (newline MATCHES [[set \(CMAKE_MODULE_PATH \${BAKED_CMAKE_SOURCE_DIR}/CMake/Modules]])
                    string (REPLACE "{BAKED_CMAKE_SOURCE_DIR}/CMake/Modules" "{URHO3D_CMAKE_MODULE}" newline ${newline})
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES CMAKE_ARGS AND newline MATCHES BAKED_CMAKE_SOURCE_DIR AND NOT newline MATCHES URHO3D_CMAKE_MODULE)
                    set (newline "${newline} -D URHO3D_CMAKE_MODULE=\${URHO3D_CMAKE_MODULE}")
                    set (IsLineChanged TRUE)
                endif ()      
               if (newline MATCHES "-P CMake/Modules/GetUrhoRevision\.cmake") # Some 1.5 versions of urho3d
                    string (REPLACE "CMake/Modules" "\${URHO3D_ROOT_DIR}/cmake/Modules" newline ${newline})  
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES "CMAKE_SOURCE_DIR}/CMake/Modules/GetUrhoRevision") # Some 1.5 versions of urho3d
                    string (REPLACE "CMAKE_SOURCE_DIR}/CMake/Modules" "URHO3D_ROOT_DIR}/cmake/Modules" newline ${newline})  
                    set (IsLineChanged TRUE)
                endif ()                
                if (newline MATCHES "{CMAKE_SOURCE_DIR}/Source " AND NOT newline MATCHES [[set \(URHO3D_SOURCE_DIR]])
                    string (REPLACE "{CMAKE_SOURCE_DIR}/Source" "{URHO3D_SOURCE_DIR}" newline ${newline})
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES "{CMAKE_SOURCE_DIR}/bin")
                    string (REPLACE "{CMAKE_SOURCE_DIR}/bin" "{URHO3D_BUILD_DIR}/bin" newline ${newline})
                    set (IsLineChanged TRUE)
                endif ()                
                if (newline MATCHES "{CMAKE_SOURCE_DIR}" 
                    AND NOT newline MATCHES [[set \(URHO3D_ROOT_DIR]] 
                    AND NOT newline MATCHES [[set \(URHO3D_SOURCE_DIR]]
                    AND NOT newline MATCHES [[set \(URHO3D_CMAKE_MODULE]]
                    AND NOT newline MATCHES [[list \(APPEND CMAKE_MODULE_PATH]])
                    string (REPLACE "{CMAKE_SOURCE_DIR}" "{URHO3D_ROOT_DIR}" newline ${newline})
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES "{CMAKE_BINARY_DIR}" AND NOT newline MATCHES [[set \(URHO3D_BUILD_DIR]])
                    string (REPLACE "{CMAKE_BINARY_DIR}" "{URHO3D_BUILD_DIR}" newline ${newline})    
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES [[if \(NOT CMAKE_PROJECT_NAME STREQUAL Urho3D\)]])
                    string (REPLACE "Urho3D" "Urho3D AND NOT URHO3D_AS_SUBMODULE" newline ${newline})  
                    set (IsLineChanged TRUE)
                endif ()
                if (newline MATCHES "COMMAND .{URHO3D_BUILD_DIR}.bin.tool.tolua" AND newline MATCHES "{CMAKE_PROJECT_NAME} -L ToCppHook.lua")
                    string (REPLACE "\${CMAKE_PROJECT_NAME}" "Urho3D" newline ${newline})  
                    set (IsLineChanged TRUE)
                endif ()
                if (IsLineChanged)
                    set (IsFileChanged TRUE)
                    math (EXPR num_patches "${num_patches} + 1")
                    if (PATCHER_SHOW)
                        message ("(${line_counter}) = ${line}")
                        message (" ----->${newline}")
                    endif ()
                endif ()
            endif ()
            set (new_content "${new_content}${newline}\n")
            set (prevline "${line}")
        endforeach ()
        if (IsFileChanged)
            if (PATCHER_SHOW)
                message (" .. ${dir}/CMakeLists.txt ... ${num_patches} patches to apply")
            endif ()        
            if (PATCHER_APPLY)
                execute_process (COMMAND ${CMAKE_COMMAND} -E copy ${dir}/CMakeLists.txt ${dir}/CMakeLists.txt.orig)
                file (WRITE ${dir}/CMakeLists.txt "${new_content}\n")
                message (" .. ${dir}/CMakeLists.txt ... ${num_patches} patches applied")
            endif ()
        endif ()
    endif ()
endfunction ()

function (urho_restore_cmakefile_backup dir)
    foreach (ext old orig)
        if (EXISTS ${dir}/CMakeLists.txt.${ext})
            execute_process (COMMAND ${CMAKE_COMMAND} -E rm -f ${dir}/CMakeLists.txt)
            execute_process (COMMAND ${CMAKE_COMMAND} -E rename ${dir}/CMakeLists.txt.${ext} ${dir}/CMakeLists.txt)
            message (" .. ${dir}/CMakeLists.txt ... restored from CMakeLists.txt.${ext}")
            break ()
        endif ()
    endforeach ()
endfunction ()

function (urho_apply_cmake_patches urhosource)
    message (" ... Apply Patches to urho source cmakefiles in ${urhosource} ...")
    urho_apply_cmakefile_patch ("${urhosource}/..")
    urho_apply_cmakefile_patch ("${urhosource}")
    urho_apply_cmakefile_patch ("${urhosource}/Urho3D")    
    urho_apply_cmakefile_patch ("${urhosource}/ThirdParty/LuaJIT")
    urho_apply_cmakefile_patch ("${urhosource}/ThirdParty/LuaJIT/src/host")
    urho_apply_cmakefile_patch ("${urhosource}/ThirdParty/toluapp/src/bin")
    urho_apply_cmakefile_patch ("${urhosource}/Tools")
    urho_apply_cmakefile_patch ("${urhosource}/Tools/BindingGenerator")    
    urho_apply_cmakefile_patch ("${urhosource}/Tools/PackageTool")
    urho_apply_cmakefile_patch ("${urhosource}/Tools/Urho3DPlayer")
    urho_apply_cmakefile_patch ("${urhosource}/Clang-Tools")
endfunction ()

function (urho_remove_cmake_patches urhosource)
    message (" ... Remove Patches to urho source cmakefiles in ${urhosource} ...")
    urho_restore_cmakefile_backup ("${urhosource}/..")
    urho_restore_cmakefile_backup ("${urhosource}")
    urho_restore_cmakefile_backup ("${urhosource}/Urho3D")
    urho_restore_cmakefile_backup ("${urhosource}/ThirdParty/LuaJIT")
    urho_restore_cmakefile_backup ("${urhosource}/ThirdParty/LuaJIT/src/host")
    urho_restore_cmakefile_backup ("${urhosource}/ThirdParty/toluapp/src/bin")
    urho_restore_cmakefile_backup ("${urhosource}/Tools")
    urho_restore_cmakefile_backup ("${urhosource}/Tools/BindingGenerator")
    urho_restore_cmakefile_backup ("${urhosource}/Tools/PackageTool")
    urho_restore_cmakefile_backup ("${urhosource}/Tools/Urho3DPlayer")
    urho_restore_cmakefile_backup ("${urhosource}/Clang-Tools")
endfunction ()

set (${PROJECTNAME}_URHO3D_PATCHER_MODE "NONE" CACHE STRING "Urho3D cmakefiles patcher mode for older urho3d sources")
set_property (CACHE ${PROJECTNAME}_URHO3D_PATCHER_MODE PROPERTY STRINGS "NONE;RESTOREORIGINALS;SHOWPATCH;APPLYPATCH")
set (URHO3D_PATCHER_SUCCESS TRUE)

if (URHO3D_HOME AND URHO3D_AS_SUBMODULE)
    
    # restore by default the old cmakefiles
    if (${PROJECTNAME}_URHO3D_PATCHER_MODE STREQUAL RESTOREORIGINALS AND URHO3D_PATCHER_RESTORE)
        dev_message ("Restore Old cmakefiles ...")
        urho_find_origin("${URHO3D_HOME}" rootlast sourcelast origin)
        if (origin STREQUAL "source")
            urho_remove_cmake_patches ("${sourcelast}")
            set (URHO3D_PATCHER_SUCCESS FALSE)
        endif ()
        set (URHO3D_PATCHER_RESTORE FALSE)
    endif ()

    # apply patches to urho3d cmakefiles if submodule
    if (${PROJECTNAME}_URHO3D_PATCHER_MODE MATCHES PATCH AND URHO3D_PATCHER_APPLY)

        set (PATCHER_SHOW TRUE)
        set (PATCHER_APPLY FALSE)
        if (${PROJECTNAME}_URHO3D_PATCHER_MODE MATCHES APPLY)
            set (PATCHER_APPLY TRUE)
            set (PATCHER_SHOW FALSE)
        endif ()

        urho_remove_cmake_patches ("${URHO3D_SOURCE_DIR}")        
        urho_apply_cmake_patches ("${URHO3D_SOURCE_DIR}")        
        
        if (PATCHER_SHOW AND NOT PATCHER_APPLY)
            set (URHO3D_PATCHER_SUCCESS FALSE)
        endif ()
        set (URHO3D_PATCHER_APPLY FALSE)
    endif ()
endif ()